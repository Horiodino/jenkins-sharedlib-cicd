@Library('shared-lib') _  
pipeline{
    agent any 

    parameters{
        choice(name :'action', choices: 'create\ndelete', description: 'what action to perform create/destroy')
        string(name: 'dockerimagename', description: 'docker image name', defaultValue: 'jenkins-sharedlib-cicd')
        string(name: 'dockeruser', description: 'docker user', defaultValue: 'holiodin')
        string(name: 'imgtag', description: 'docker image tag', defaultValue: 'latest')
    }
    stages{
        stage("scm checkout"){
            when {
            expression { params.action == 'create' }
                }
            steps{
                script {
                    gitCheckout(
                        branch: "main",
                        url: "https://github.com/Horiodino/jenkins-sharedlib-cicd.git"
                    )
                    
                }
            }
        }
        // stage("unit test maven"){
        //     when {
        //     expression { params.action == 'create' }
        // }
        //     steps{
        //         script{
        //             mvnTest()
        //         }
        //     }
        // }

        // stage ("intigration test mvn"){
        //         when {
        //     expression { params.action == 'create' }
        // }
        //     steps{
        //         script{
        //             mvnintergrationTest()
        //         }
        //     }
        // }

        // stage("staticcodeAnalysis SonarQube"){
        //     when { 
        //         expression { params.action == 'create' }
        //     }
        //     steps{
        //         script{
        //             def SonarcredentialsId = 'sonar-api'
        //             staticcodeAnalysis(SonarcredentialsId)
        //         }
        //     }
        // }

        // stage("QualityGateStatus check SonarQube"){
        //     when { 
        //         expression { params.action == 'create' }
        //     }
        //     steps{
        //         script{
        //             def SonarcredentialsId = 'sonar-api'
        //             QualityGateStatus(SonarcredentialsId)
        //         }
        //     }
        // }
        stage("mvn build -jar"){
            when { 
                expression { params.action == 'create' }
            }
            steps{
                script{
                    mvnBuild()
                }
            }
        }
        stage("Dcoker build"){
            when { 
                expression { params.action == 'create' }
            }
            steps{

                dockerBuild("${params.dockerimagename}", "$params.dockeruser", "${params.imgtag}")

            }
        }
    }
}